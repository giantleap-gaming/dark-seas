/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import { Provider } from "@ethersproject/providers";
import type { LibQuery, LibQueryInterface } from "../LibQuery";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "array",
        type: "uint256[]",
      },
    ],
    name: "arrayToList",
    outputs: [
      {
        internalType: "LinkedList",
        name: "list",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "LinkedList",
        name: "list",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "length",
        type: "uint256",
      },
    ],
    name: "listToArray",
    outputs: [
      {
        internalType: "uint256[]",
        name: "array",
        type: "uint256[]",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
];

export class LibQuery__factory {
  static readonly abi = _abi;
  static createInterface(): LibQueryInterface {
    return new utils.Interface(_abi) as LibQueryInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): LibQuery {
    return new Contract(address, _abi, signerOrProvider) as LibQuery;
  }
}
